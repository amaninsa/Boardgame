# we can go to github.com/marketplace?type=actions and we can build the actions pipeline easily by picking up the script from there for every stage that we want in our cicd-pieline.

name: CICD Pipeline

on: #this is trigger or webhook like on what action this pipeling hshould trigger automatically, so here now i will set only push
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted 
#it is like slave in Jenkins, so here we are adding the runner on which our pipeline will be run, and runner self hosted is a label that we already created in vm

    steps:
    - uses: actions/checkout@v4 
# used means we are setting up the environment for the tools to run, or actions/checkout@v4 means we are going to checkout this whole repo. on runner for usage
 
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn package --file pom.xml

    - uses: actions/uploat-artifact@v4  # uses will create the environement using which i can publish my artifact
      with:
        name: Boadgame
        path: target/*.jar 

    - name: Trivy FS Scan
      run: |
        trivy fs --format table -o trivy-fs-report.html .

    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env: 
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq




      # CHECKING THE QUALITY GATE STATUS
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master

      # force to fail step after specific time
      timeout-minutes: 5
      env:
        SONAR_TOKE: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: Sst up QEMO     # it is required to set up the docker environment
      uses: docker/setup-qemo-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker Image
      run: | 
        docker build -t adijaiswal/boardgame:latest .

    - name: Trivy Image Scan
      run: |
        trivy image --format table -o trivy-image-report.html adijaiswal/board:latest

    - name: Login to the DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME}}
        password: ${{ secrets.DOCKERHUB_TOKEN}}

    - name: Push Docker Image
      run: |
        docker push avats3377/boardgame:latest

    - name: kubectl Action   # configuring the kubectl on the runner
      uses: tale/kubectl-action@v1
      with:
         base64-kube-config: ${{ secrets.KUBE_CONFIG }}
    - run: |
           kubectl apply -f deployment-service.yaml -n webapps
           kubectl get svc -n webapps
